pipeline {
    agent any
    options {
            ansiColor('xterm')
            }

    parameters {
        string(name: 'MODULE_NAME', defaultValue: 'template', description: 'Module name')
        choice(name: 'TERRAFORM_VERSION', choices: ['1.0.11'], description: 'Terraform version')
        string(name: 'TERRAFORM_PATH', defaultValue: './terraform', description: 'Terraform module location')
        // gitParameter  name: 'TAG_NAME', type: 'PT_TAG', defaultValue: 'main', quickFilterEnabled: 'true'
        gitParameter  name: 'TAG_NAME', type: 'PT_BRANCH', defaultValue: 'main'
        choice(name: 'GET_APPROVAL', choices: ['No', 'Yes'], description: 'Do you want to confirm before going to the next or not?')
        string(name: 'S3_BUCKET', defaultValue: 'vl-terraform-modules-dev-storage', description: 'S3 bucket that will be published using cloudfront to distribute zipped terraform module')
    }
    
    stages {
        // stage ('Checking payload'){
        //     steps {
        //         script {
        //             try {
        //                 echo "${payload}"
        //                 skipRemainingStages = false
        //             }
        //             catch( groovy.lang.MissingPropertyException e ) {
        //                 echo "No payload provided!!!"
        //                 skipRemainingStages = true
        //             }
        //         }
        //     }
        // }
        stage ('Checkout'){
            steps {
                script {
                    echo "Git checkout tag ${payload} !!!"
                    checkout([$class: 'GitSCM', 
                            branches: [[name: "${payload}"]], 
                            doGenerateSubmoduleConfigurations: false, 
                            extensions: [], 
                            submoduleCfg: [], 
                            userRemoteConfigs: [[credentialsId: 'sonlammgift', url: 'git@bitbucket.org:devops-vl/aws-module-template.git']]])
                }
            }
        }
        stage ('Test') {
            steps {
                sh """
                #!/bin/bash
                    echo ############################
                    echo ${payload}
                    echo Testing...
                    echo ############################}
                """
            }
        }
    }
}